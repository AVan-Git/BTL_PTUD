/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.sql.SQLException;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.List;

import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import GUI.Dialog.DialogCT_HoaDon;
import constant.Value;
import dao.HoaDonDAO;
import dao.impl.HoaDonImpl;
import entity.HoaDon;
import net.sf.jasperreports.engine.JRException;
import report.Report_PDF;

/**
 *
 * @author LENOVO
 */
public class ThongkeHD extends JFrame implements ActionListener, MouseListener {
	private javax.swing.JButton X;
	private javax.swing.JButton btnTheoTT;
	private javax.swing.JButton btnTheoKH;
	private javax.swing.JButton btnTheoNV;
	private javax.swing.JButton btnTheoSanPham;
	private javax.swing.JComboBox<String> cboNam;
	private javax.swing.JComboBox<String> cboNgay;
	private javax.swing.JComboBox<String> cboThang;
	private javax.swing.JCheckBox chkNam;
	private javax.swing.JCheckBox chk_KTG;
	private javax.swing.JCheckBox chkNgay;
	private javax.swing.JCheckBox chkThang;
	private com.toedter.calendar.JDateChooser dateEnd;
	private com.toedter.calendar.JDateChooser dateStart;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel5;
	private javax.swing.JLabel jLabel6;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JSeparator jSeparator3;
	private javax.swing.JLabel lblNam;
	private javax.swing.JLabel lblNgay;
	private javax.swing.JLabel lblThang;
	private javax.swing.JLabel lblTieuDe;
	private javax.swing.JLabel lblTieuDe1;
	private javax.swing.JLabel lblTieuDe2;
	private javax.swing.JTable table;
	private javax.swing.JTextField txtTong;
	private DefaultTableModel modelTable;

	private String tk = QL.taiKhoan;

	private HoaDonDAO hoaDonDAO = new HoaDonImpl();

	private List<HoaDon> dsHoaDon = hoaDonDAO.getDsHoaDon();

	private SimpleDateFormat dformat = new SimpleDateFormat("dd-MM-yyyy");
	private SimpleDateFormat dformat2 = new SimpleDateFormat("YYYY-MM-dd");

	private int x1 = 0;

	private Report_PDF rp = new Report_PDF();

	/**
	 * Creates new form ThongkeHD
	 */
	public ThongkeHD() {
		initComponents();
		this.setLocationRelativeTo(null);
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	// <editor-fold defaultstate="collapsed" desc="Generated Code">
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		table = new javax.swing.JTable();
		X = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		btnTheoKH = new javax.swing.JButton();
		btnTheoNV = new javax.swing.JButton();
		jSeparator2 = new javax.swing.JSeparator();
		dateStart = new com.toedter.calendar.JDateChooser();
		dateEnd = new com.toedter.calendar.JDateChooser();
		jSeparator3 = new javax.swing.JSeparator();
		lblNgay = new javax.swing.JLabel();
		lblThang = new javax.swing.JLabel();
		lblNam = new javax.swing.JLabel();
		cboNgay = new javax.swing.JComboBox<>();
		cboThang = new javax.swing.JComboBox<>();
		cboNam = new javax.swing.JComboBox<>();
		chkNgay = new javax.swing.JCheckBox();
		chkThang = new javax.swing.JCheckBox();
		chkNam = new javax.swing.JCheckBox();
		btnTheoSanPham = new javax.swing.JButton();
		btnTheoTT = new javax.swing.JButton();
		lblTieuDe = new javax.swing.JLabel();
		lblTieuDe1 = new javax.swing.JLabel();
		lblTieuDe2 = new javax.swing.JLabel();
		chk_KTG = new javax.swing.JCheckBox();
		jLabel5 = new javax.swing.JLabel();
		txtTong = new javax.swing.JTextField();
		jLabel6 = new javax.swing.JLabel();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setUndecorated(true);

		jPanel1.setBackground(new java.awt.Color(204, 204, 204));
		jPanel1.setPreferredSize(new java.awt.Dimension(1361, 767));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel1.setText("Thống kê hóa đơn");

		table.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã hóa đơn", "Tên khách hàng", "Tên nhân viên", "Ngày lập", "Số lượng sách", "Tổng tiền" }));
		jScrollPane1.setViewportView(table);
		if (table.getColumnModel().getColumnCount() > 0) {
			table.getColumnModel().getColumn(2).setResizable(false);
		}

		X.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		X.setForeground(new java.awt.Color(255, 0, 0));
		X.setText("X");
		X.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				XActionPerformed(evt);
			}
		});

		jLabel2.setText("Chọn thời gian");

		jLabel3.setText("Từ:");

		jLabel4.setText("Đến:");

		btnTheoTT.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoTT.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoTT.setText("Thống kê doanh thu theo tổng tiền");
		btnTheoTT.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTheoTTActionPerformed(evt);
			}
		});

		btnTheoKH.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoKH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoKH.setText("Thống kê doanh thu theo khách hàng");
		btnTheoKH.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTheoKHActionPerformed(evt);
			}
		});

		btnTheoNV.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoNV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoNV.setText("Thống kê doanh thu theo nhân viên");
		btnTheoNV.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				btnTheoNVActionPerformed(evt);
			}
		});

		jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

		dateStart.addAncestorListener(new javax.swing.event.AncestorListener() {
			public void ancestorAdded(javax.swing.event.AncestorEvent evt) {
				dateStartAncestorAdded(evt);
			}

			public void ancestorMoved(javax.swing.event.AncestorEvent evt) {
			}

			public void ancestorRemoved(javax.swing.event.AncestorEvent evt) {
			}
		});

		jSeparator3.setOrientation(javax.swing.SwingConstants.VERTICAL);

		lblNgay.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		lblNgay.setText("Ngày");

		lblThang.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		lblThang.setText("Tháng");

		lblNam.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
		lblNam.setText("Năm");

		cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07",
				"08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23", "24",
				"25", "26", "27", "28", "29", "30", "31", " " }));

		cboThang.setModel(new javax.swing.DefaultComboBoxModel<>(
				new String[] { "01", "02", "03", "04", "05", "06", "07", "08", "09", "10", "11", "12" }));

		cboNam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2021", "2020", "2019", "2018", "2017",
				"2016", "2015", "2014", "2013", "2012", "2011", "2010", "2009", "2008", "2007", "2006", "2005", "2004",
				"2003", "2002", "2001", "2000", "1999", "1998", "1997", "1996", "1995", "1994", "1993", "1992", "1991",
				"1990", "1989", "1988", "1987", "1986", "1985", "1984", "1983", "1982", "1981", "1980", "1979", "1978",
				"1977", "1976", "1975", "1974", "1973", "1972", "1971", "1970", "1969", "1968", "1967", "1966", "1965",
				"1964", "1963", "1962", "1961", "1960", "1959", "1958", "1957", "1956", "1955", "1954", "1953", "1952",
				"1951", "1950", "1949", "1948", "1947", "1946", "1945", "1944", "1943", "1942", "1941", "1940", "1939",
				"1938", "1937", "1936", "1935", "1934", "1933", "1932", "1931", "1930", "1929", "1928", "1927", "1926",
				"1925", "1924", "1923", "1922", "1921", "1920", " " }));

		btnTheoSanPham.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoSanPham.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoSanPham.setText("Thống kê doanh thu theo sản phẩm");

		lblTieuDe.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		lblTieuDe.setText("Thống kê theo mốc thời gian");

		lblTieuDe1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		lblTieuDe1.setText("Thống kê theo thời gian cố định");

		lblTieuDe2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		lblTieuDe2.setForeground(new java.awt.Color(255, 153, 51));
		lblTieuDe2.setText("Chú ý: Hãy tichs trước khi chọn thống kê ");

		chk_KTG.setText("Thống kê theo mốc thời gian");
		chk_KTG.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				chk_KTGActionPerformed(evt);
			}
		});

		jLabel5.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel5.setText("Tổng doanh thu");

		jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel6.setText("VND");

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1.setLayout(jPanel1Layout);
		jPanel1Layout.setHorizontalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGap(50, 50, 50).addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(14, 14, 14).addGroup(jPanel1Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING).addComponent(jLabel1)
								.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
										.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
												jPanel1Layout.createSequentialGroup().addComponent(lblTieuDe2)
														.addGap(143, 143, 143))
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
												jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addGroup(jPanel1Layout.createSequentialGroup()
																.addGroup(jPanel1Layout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.TRAILING)
																		.addComponent(lblNgay,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				38,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addComponent(lblNam,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				38,
																				javax.swing.GroupLayout.PREFERRED_SIZE)
																		.addComponent(lblThang,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				38,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
																.addGap(30, 30, 30)
																.addGroup(jPanel1Layout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING,
																		false)
																		.addComponent(cboNgay, 0, 85, Short.MAX_VALUE)
																		.addComponent(cboThang, 0,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE)
																		.addComponent(cboNam, 0,
																				javax.swing.GroupLayout.DEFAULT_SIZE,
																				Short.MAX_VALUE))
																.addGroup(jPanel1Layout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																		.addGroup(
																				javax.swing.GroupLayout.Alignment.TRAILING,
																				jPanel1Layout.createSequentialGroup()
																						.addPreferredGap(
																								javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(chkNgay,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								29,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addGap(106, 106, 106))
																		.addGroup(jPanel1Layout.createSequentialGroup()
																				.addGap(50, 50, 50)
																				.addGroup(jPanel1Layout
																						.createParallelGroup(
																								javax.swing.GroupLayout.Alignment.LEADING)
																						.addComponent(chkNam)
																						.addComponent(chkThang))
																				.addGap(114, 114, 114))))
														.addGroup(jPanel1Layout.createSequentialGroup()
																.addComponent(lblTieuDe1).addGap(106, 106, 106)))
														.addComponent(jSeparator3,
																javax.swing.GroupLayout.PREFERRED_SIZE, 20,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGap(64, 64, 64)))
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
												.addComponent(btnTheoNV, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(btnTheoTT, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(btnTheoKH, javax.swing.GroupLayout.DEFAULT_SIZE,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(btnTheoSanPham, javax.swing.GroupLayout.PREFERRED_SIZE,
														267, javax.swing.GroupLayout.PREFERRED_SIZE))
										.addGap(26, 26, 26)))
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel1Layout.createSequentialGroup().addGap(77, 77, 77)
												.addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 20,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
																jPanel1Layout.createSequentialGroup().addPreferredGap(
																		javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																		.addComponent(chk_KTG,
																				javax.swing.GroupLayout.PREFERRED_SIZE,
																				222,
																				javax.swing.GroupLayout.PREFERRED_SIZE))
														.addGroup(jPanel1Layout.createSequentialGroup()
																.addGap(50, 50, 50)
																.addGroup(jPanel1Layout.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																		.addComponent(lblTieuDe)
																		.addGroup(jPanel1Layout.createParallelGroup(
																				javax.swing.GroupLayout.Alignment.LEADING,
																				false)
																				.addGroup(jPanel1Layout
																						.createSequentialGroup()
																						.addComponent(jLabel4,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								31,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addPreferredGap(
																								javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(dateEnd,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								163, Short.MAX_VALUE))
																				.addGroup(jPanel1Layout
																						.createSequentialGroup()
																						.addComponent(jLabel3,
																								javax.swing.GroupLayout.PREFERRED_SIZE,
																								31,
																								javax.swing.GroupLayout.PREFERRED_SIZE)
																						.addPreferredGap(
																								javax.swing.LayoutStyle.ComponentPlacement.RELATED)
																						.addComponent(dateStart,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								javax.swing.GroupLayout.DEFAULT_SIZE,
																								Short.MAX_VALUE))
																				.addComponent(jLabel2)))
																.addGap(53, 53, 53)))
												.addGap(0, 147, Short.MAX_VALUE))
										.addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout
												.createSequentialGroup()
												.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
														javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
												.addComponent(X))))
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1268,
								javax.swing.GroupLayout.PREFERRED_SIZE))
						.addContainerGap(16, Short.MAX_VALUE))
				.addGroup(javax.swing.GroupLayout.Alignment.TRAILING,
						jPanel1Layout.createSequentialGroup()
								.addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
								.addComponent(jLabel5).addGap(32, 32, 32)
								.addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, 224,
										javax.swing.GroupLayout.PREFERRED_SIZE)
								.addGap(18, 18, 18).addComponent(jLabel6).addGap(40, 40, 40)));
		jPanel1Layout.setVerticalGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
						.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
						.addGroup(jPanel1Layout.createSequentialGroup().addGap(52, 52, 52).addComponent(lblTieuDe1)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
										.addGroup(jPanel1Layout.createSequentialGroup().addGap(17, 17, 17)
												.addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(chkNgay,
																javax.swing.GroupLayout.Alignment.TRAILING,
																javax.swing.GroupLayout.PREFERRED_SIZE, 29,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGroup(jPanel1Layout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(lblNgay).addComponent(cboNgay,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 29,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGap(24, 24, 24)
												.addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addGroup(jPanel1Layout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(lblThang).addComponent(cboThang,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 29,
																		javax.swing.GroupLayout.PREFERRED_SIZE))
														.addComponent(chkThang))
												.addGap(25, 25, 25)
												.addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
														.addComponent(chkNam, javax.swing.GroupLayout.PREFERRED_SIZE,
																29, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addGroup(jPanel1Layout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.BASELINE)
																.addComponent(lblNam).addComponent(cboNam,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 29,
																		javax.swing.GroupLayout.PREFERRED_SIZE))))
										.addGroup(jPanel1Layout.createSequentialGroup().addGap(6, 6, 6)
												.addComponent(jLabel2).addGap(11, 11, 11)
												.addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(dateStart, javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel3))
												.addGap(31, 31, 31)
												.addGroup(jPanel1Layout
														.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
														.addComponent(dateEnd, javax.swing.GroupLayout.PREFERRED_SIZE,
																javax.swing.GroupLayout.DEFAULT_SIZE,
																javax.swing.GroupLayout.PREFERRED_SIZE)
														.addComponent(jLabel4))
												.addGap(28, 28, 28).addComponent(chk_KTG,
														javax.swing.GroupLayout.PREFERRED_SIZE, 29,
														javax.swing.GroupLayout.PREFERRED_SIZE)))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 22,
										Short.MAX_VALUE)
								.addComponent(lblTieuDe2).addGap(35, 35, 35))
						.addGroup(jPanel1Layout.createSequentialGroup().addGroup(jPanel1Layout
								.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
								.addGroup(jPanel1Layout.createSequentialGroup().addGap(56, 56, 56).addComponent(
										jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 160,
										javax.swing.GroupLayout.PREFERRED_SIZE))
								.addGroup(jPanel1Layout.createSequentialGroup()
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
												.addComponent(
														jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40,
														javax.swing.GroupLayout.PREFERRED_SIZE)
												.addComponent(X))
										.addGroup(jPanel1Layout
												.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
												.addGroup(jPanel1Layout.createSequentialGroup()
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addGroup(jPanel1Layout
																.createParallelGroup(
																		javax.swing.GroupLayout.Alignment.LEADING)
																.addComponent(lblTieuDe).addComponent(jSeparator2,
																		javax.swing.GroupLayout.PREFERRED_SIZE, 206,
																		javax.swing.GroupLayout.PREFERRED_SIZE)))
												.addGroup(jPanel1Layout.createSequentialGroup().addGap(16, 16, 16)
														.addComponent(btnTheoTT, javax.swing.GroupLayout.PREFERRED_SIZE,
																42, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(btnTheoNV, javax.swing.GroupLayout.PREFERRED_SIZE,
																43, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
														.addComponent(btnTheoKH, javax.swing.GroupLayout.PREFERRED_SIZE,
																43, javax.swing.GroupLayout.PREFERRED_SIZE)
														.addPreferredGap(
																javax.swing.LayoutStyle.ComponentPlacement.RELATED)
														.addComponent(btnTheoSanPham,
																javax.swing.GroupLayout.PREFERRED_SIZE, 43,
																javax.swing.GroupLayout.PREFERRED_SIZE)))))
								.addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED,
										javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
						.addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 386,
								javax.swing.GroupLayout.PREFERRED_SIZE)
						.addGap(18, 18, 18)
						.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
								.addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
										.addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
												javax.swing.GroupLayout.PREFERRED_SIZE)
										.addComponent(jLabel5))
								.addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 38,
										javax.swing.GroupLayout.PREFERRED_SIZE))
						.addGap(68, 68, 68)));

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
						1340, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 10, Short.MAX_VALUE)));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
				.addGroup(layout.createSequentialGroup().addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE,
						812, javax.swing.GroupLayout.PREFERRED_SIZE).addGap(0, 56, Short.MAX_VALUE)));
		pack();
		setLocationRelativeTo(null);
		this.setExtendedState(JFrame.MAXIMIZED_BOTH);
		getContentPane().setBackground(new java.awt.Color(204, 204, 204));
//        
		btnTheoKH.addActionListener(this);
		btnTheoNV.addActionListener(this);
		btnTheoSanPham.addActionListener(this);
		btnTheoTT.addActionListener(this);

		table.addMouseListener(this);
//		
		chk_KTG.addActionListener(this);
		chkNam.addActionListener(this);
		chkNgay.addActionListener(this);
		chkThang.addActionListener(this);
//       
		addComboBox();
		table.setDefaultEditor(Object.class, null);
		modelTable = (DefaultTableModel) table.getModel();
		addTable(dsHoaDon);
//       
		dateStart.setDateFormatString("dd-MM-yyyy");
		dateStart.setDate(getHienTai());
		dateStart.setMaxSelectableDate(getHienTai());
		dateEnd.setDateFormatString("dd-MM-yyyy");
		dateEnd.setDate(getHienTai());
		dateEnd.setMaxSelectableDate(getHienTai());
//		
		txtTong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
		txtTong.setForeground(new java.awt.Color(255, 102, 0));
		txtTong.setEditable(false);

	}// </editor-fold>

	private void XActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
		String tk = QL.taiKhoan;
		new QL(tk).setVisible(true);
		this.setVisible(false);
	}

	private void dateStartAncestorAdded(javax.swing.event.AncestorEvent evt) {
		// TODO add your handling code here:
	}

	private void btnTheoNVActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void btnTheoKHActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void btnTheoSanPhamActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void chk_KTGActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	private void btnTheoTTActionPerformed(java.awt.event.ActionEvent evt) {
		// TODO add your handling code here:
	}

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ThongkeHD().setVisible(true);
			}
		});
	}

	@Override
	public void mouseClicked(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mousePressed(MouseEvent e) {
		if (e.getClickCount() == 2) {
			int row = table.getSelectedRow();
			new DialogCT_HoaDon(modelTable.getValueAt(row, 0).toString()).setVisible(true);
		}
	}

	@Override
	public void mouseReleased(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseEntered(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void mouseExited(MouseEvent e) {
		// TODO Auto-generated method stub

	}

	@Override
	public void actionPerformed(ActionEvent e) {
		Object o = e.getSource();
		
//		if (o.equals(chk_KTG)) {
//			System.out.println("chk_KTG");
//		}else if (o.equals(chkNam)) {
//
//			System.out.println("chkNam");
//		}
		
		if (o.equals(btnTheoKH)) {
			System.err.println("btnTheoKH()");
			getTKTheoKhachHang();
		}else if (o.equals(btnTheoTT)) {
			System.err.println("btnTheoTT()");
			getTKTheoTT();
		} else if (o.equals(btnTheoNV)) {
			System.err.println("btnTheoNV()");
			getTKTheoNhanVien();
		} else if (o.equals(btnTheoSanPham)) {
			System.err.println("btnTheoSanPham()");
			getTKTheoSP();
		}else if (o.equals(cboThang)) {
			getcboThang();
		} else if (o.equals(cboNam)) {
			getcboNam();
		}
	}

	private void getTKTheoTT() {
		int x = check_JcheckBox();
		if (x == 0) {
			return;
		}
		if (x == 1) {
			Date dateBD = dateStart.getCalendar().getTime();
			Date dateKT = dateEnd.getCalendar().getTime();
			if (dateKT.compareTo(dateBD) < 0) {
				JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu.");
				return;
			}
			if (JOptionPane.showConfirmDialog(this,
					"Bạn có muốn suất thống kê doanh thu theo hóa đơn bán hàng trong khoảng thời gian từ "
							+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " không? ",
					"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
				if (hoaDonDAO.soHoaDon_KhoangTG(dformat2.format(dateBD), dformat2.format(dateKT)) > 0) {

					try {
						JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
//						rp.rp_KHTheoDoanhThu_KTG(dformat2.format(dateBD), dformat2.format(dateKT));
						rp.rp_HoaDon_TheoNam( dformat2.format(dateKT)+"%");

						JOptionPane.showMessageDialog(this,
								"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
					} catch (Exception e) {
						e.printStackTrace();
						JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
					}
				}else {

					JOptionPane.showMessageDialog(this, "Trong khoản thời gian từ "+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " cửa hàng không có giao dịch nào.");
				}
			}
		} else {
			System.out.println(x);

			boolean chk1 = chkNgay.isSelected();
			boolean chk2 = chkThang.isSelected();
			boolean chk3 = chkNam.isSelected();
			String value_Date = "";
			if (chk3) {
				String nam = cboNam.getSelectedItem().toString();
				value_Date = nam + "%";
				if (chk2) {
					String thang = cboThang.getSelectedItem().toString();
					value_Date = nam + "-" + thang + "%";
					if (chk1) {
						String ngay = cboNgay.getSelectedItem().toString();
						value_Date = nam + "-" + thang + "-" + ngay + "%";
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo hóa đơn bán hàng trong ngày: " + ngay + "/" + thang
										+ "/" + nam + " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_HoaDon_TheoNgay(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
									
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Ngày: " + ngay + "/" + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}

					} else {
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo hóa đơn bán hàng trong tháng: " + thang + "/" + nam
										+ " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_HoaDon_TheoThang(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Tháng: " + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}
					}
				} else {
					if (JOptionPane.showConfirmDialog(this,
							"Bạn có muốn suất thống kê doanh thu theo hóa đơn bán hàng trong năm " + nam + " không? ",
							"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

						if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
							try {
								JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
								rp.rp_HoaDon_TheoNam(value_Date);
								JOptionPane.showMessageDialog(this,
										"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
							} catch (Exception e) {
								e.printStackTrace();
								JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
							}
						} else {
							JOptionPane.showMessageDialog(this, "Năm: " + nam + ", cửa hàng không có hóa đơn.");
						}

					}
				}
			} else {
				JOptionPane.showMessageDialog(this, "Bạn hãy chọn năm muốn suất thông kê.");
			}

		}

	}

	private void getTKTheoSP() {
		int x = check_JcheckBox();
		if (x == 0) {
			return;
		}
		if (x == 1) {
			Date dateBD = dateStart.getCalendar().getTime();
			Date dateKT = dateEnd.getCalendar().getTime();
			if (dateKT.compareTo(dateBD) < 0) {
				JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu");
				return;
			}
			if (JOptionPane.showConfirmDialog(this,
					"Bạn có muốn suất thống kê doanh thu theo sản phẩm trong khoảng thời gian từ "
							+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " không? ",
					"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
				if (hoaDonDAO.soHoaDon_KhoangTG(dformat2.format(dateBD), dformat2.format(dateKT)) > 0) {

					try {
						JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
						rp.rp_SPTheoDoanhThu_KTG(dformat2.format(dateBD), dformat2.format(dateKT));

						JOptionPane.showMessageDialog(this,
								"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
					} catch (Exception e) {
						e.printStackTrace();
						JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
					}
				}else {

					JOptionPane.showMessageDialog(this, "Trong khoản thời gian từ "+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " cửa hàng không có giao dịch nào.");
				}
			}
		} else {
			System.out.println(x);

			boolean chk1 = chkNgay.isSelected();
			boolean chk2 = chkThang.isSelected();
			boolean chk3 = chkNam.isSelected();
			String value_Date = "";
			if (chk3) {
				String nam = cboNam.getSelectedItem().toString();
				value_Date = nam + "%";
				if (chk2) {
					String thang = cboThang.getSelectedItem().toString();
					value_Date = nam + "-" + thang + "%";
					if (chk1) {
						String ngay = cboNgay.getSelectedItem().toString();
						value_Date = nam + "-" + thang + "-" + ngay + "%";
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo sản phẩm trong ngày: " + ngay + "/" + thang
										+ "/" + nam + " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_SPTheoDoanhThu_Nam(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
									
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Ngày: " + ngay + "/" + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}

					} else {
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo sản phẩm trong tháng: " + thang + "/" + nam
										+ " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_SPTheoDoanhThu_Nam(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Tháng: " + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}
					}
				} else {
					if (JOptionPane.showConfirmDialog(this,
							"Bạn có muốn suất thống kê doanh thu theo sản phẩm trong năm " + nam + " không? ",
							"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

						if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
							try {
								JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
								rp.rp_SPTheoDoanhThu_Nam(value_Date);
								JOptionPane.showMessageDialog(this,
										"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
							} catch (Exception e) {
								e.printStackTrace();
								JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
							}
						} else {
							JOptionPane.showMessageDialog(this, "Năm: " + nam + ", cửa hàng không có hóa đơn.");
						}

					}
				}
			} else {
				JOptionPane.showMessageDialog(this, "Bạn hãy chọn năm muốn suất thông kê.");
			}

		}

	}

	private void getTKTheoNhanVien() {
		int x = check_JcheckBox();
		if (x == 0) {
			return;
		}
		if (x == 1) {
			Date dateBD = dateStart.getCalendar().getTime();
			Date dateKT = dateEnd.getCalendar().getTime();
			if (dateKT.compareTo(dateBD) < 0) {
				JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu");
				return;
			}
			if (JOptionPane.showConfirmDialog(this,
					"Bạn có muốn suất thống kê doanh thu theo nhân viên trong khoảng thời gian từ "
							+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " không? ",
					"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
				if (hoaDonDAO.soHoaDon_KhoangTG(dformat2.format(dateBD), dformat2.format(dateKT)) > 0) {

					try {
						JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
						rp.rp_NVTheoDoanhThu_KTG(dformat2.format(dateBD), dformat2.format(dateKT));

						JOptionPane.showMessageDialog(this,
								"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
					} catch (Exception e) {
						e.printStackTrace();
						JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
					}
				}else {

					JOptionPane.showMessageDialog(this, "Trong khoản thời gian từ "+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " cửa hàng không có giao dịch nào.");
				}
			}
		} else {
			System.out.println(x);

			boolean chk1 = chkNgay.isSelected();
			boolean chk2 = chkThang.isSelected();
			boolean chk3 = chkNam.isSelected();
			String value_Date = "";
			if (chk3) {
				String nam = cboNam.getSelectedItem().toString();
				value_Date = nam + "%";
				if (chk2) {
					String thang = cboThang.getSelectedItem().toString();
					value_Date = nam + "-" + thang + "%";
					if (chk1) {
						String ngay = cboNgay.getSelectedItem().toString();
						value_Date = nam + "-" + thang + "-" + ngay + "%";
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo nhân viên trong ngày: " + ngay + "/" + thang
										+ "/" + nam + " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_NVTheoDoanhThu_Ngay(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
									
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Ngày: " + ngay + "/" + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}

					} else {
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo nhân viên trong tháng: " + thang + "/" + nam
										+ " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_NVTheoDoanhThu_Nam(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Tháng: " + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}
					}
				} else {
					if (JOptionPane.showConfirmDialog(this,
							"Bạn có muốn suất thống kê doanh thu theo nhân viên trong năm " + nam + " không? ",
							"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

						if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
							try {
								JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
								rp.rp_NVTheoDoanhThu_Nam(value_Date);
								JOptionPane.showMessageDialog(this,
										"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
							} catch (Exception e) {
								e.printStackTrace();
								JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
							}
						} else {
							JOptionPane.showMessageDialog(this, "Năm: " + nam + ", cửa hàng không có hóa đơn.");
						}

					}
				}
			} else {
				JOptionPane.showMessageDialog(this, "Bạn hãy chọn năm muốn suất thông kê.");
			}

		}

	}

	private void getTKTheoKhachHang() {
		int x = check_JcheckBox();
		if (x == 0) {
			return;
		}
		if (x == 1) {
			// chk_KTG dc chon
			Date dateBD = dateStart.getCalendar().getTime();
			Date dateKT = dateEnd.getCalendar().getTime();
			if (dateKT.compareTo(dateBD) < 0) {
				JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu");
				return;
			}
			if (JOptionPane.showConfirmDialog(this,
					"Bạn có muốn suất thống kê doanh thu theo khách hàng trong khoảng thời gian từ "
							+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " không? ",
					"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {
				if (hoaDonDAO.soHoaDon_KhoangTG(dformat2.format(dateBD), dformat2.format(dateKT)) > 0) {

					try {
						JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
						rp.rp_KHTheoDoanhThu_KTG(dformat2.format(dateBD), dformat2.format(dateKT));

						JOptionPane.showMessageDialog(this,
								"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
					} catch (Exception e) {
						e.printStackTrace();
						JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
					}
				}else {

					JOptionPane.showMessageDialog(this, "Trong khoản thời gian từ "+ dformat.format(dateBD) + " đến " + dformat.format(dateKT) + " cửa hàng không có giao dịch nào.");
				}
			}
		} else {
			System.out.println(x);

			boolean chk1 = chkNgay.isSelected();
			boolean chk2 = chkThang.isSelected();
			boolean chk3 = chkNam.isSelected();
			String value_Date = "";
			if (chk3) {
				String nam = cboNam.getSelectedItem().toString();
				value_Date = nam + "%";
				if (chk2) {
					String thang = cboThang.getSelectedItem().toString();
					value_Date = nam + "-" + thang + "%";
					if (chk1) {
						String ngay = cboNgay.getSelectedItem().toString();
						value_Date = nam + "-" + thang + "-" + ngay + "%";
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo khách hàng trong ngày: " + ngay + "/" + thang
										+ "/" + nam + " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_KHTheoDoanhThu_Nam(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
									
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Ngày: " + ngay + "/" + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}

					} else {
						if (JOptionPane.showConfirmDialog(this,
								"Bạn có muốn suất thống kê doanh thu theo khách hàng trong tháng: " + thang + "/" + nam
										+ " không? ",
								"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

							if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
								try {
									JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
									rp.rp_KHTheoDoanhThu_Nam(value_Date);
									JOptionPane.showMessageDialog(this,
											"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
								} catch (Exception e) {
									e.printStackTrace();
									JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
								}
							} else {
								JOptionPane.showMessageDialog(this,
										"Tháng: " + thang + "/" + nam + ", cửa hàng không có hóa đơn.");
							}

						}
					}
				} else {
					if (JOptionPane.showConfirmDialog(this,
							"Bạn có muốn suất thống kê doanh thu theo khách hàng trong năm " + nam + " không? ",
							"Cảnh báo", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_NO_OPTION) {

						if (hoaDonDAO.soHoaDon_MocTG(value_Date) > 0) {
							try {
								JOptionPane.showMessageDialog(this, "Hãy chờ ít phút.");
								rp.rp_KHTheoDoanhThu_Nam(value_Date);
								JOptionPane.showMessageDialog(this,
										"Xuất báo cáo thành công. ( ở thư mục " + Value.linkSave + " )");
							} catch (Exception e) {
								e.printStackTrace();
								JOptionPane.showMessageDialog(this, "Xuất báo cáo thất bại.");
							}
						} else {
							JOptionPane.showMessageDialog(this, "Năm: " + nam + ", cửa hàng không có hóa đơn.");
						}

					}
				}
			} else {
				JOptionPane.showMessageDialog(this, "Bạn hãy chọn năm muốn suất thống kê.");
			}

		}

	}

	private int check_JcheckBox() {

		boolean chk4 = chk_KTG.isSelected();
		boolean chk1 = chkNgay.isSelected();
		boolean chk2 = chkThang.isSelected();
		boolean chk3 = chkNam.isSelected();
		if (!chk1 && !chk2 && !chk3 && !chk4) {
			JOptionPane.showMessageDialog(this, "Bạn muốn thống kệ theo thời gian nào. \nHãy chọn cho chúng tôi biết.");
			return 0;
		}
		if ((chk1 && chk4) || (chk4 && chk2) || (chk3 && chk4)) {
			JOptionPane.showMessageDialog(this,
					"Hiện tại bạn đang chọn hai trường hợp thống kê khác nhau. \n Hãy chọn lại.");
			chk_KTG.setSelected(false);
			chkNam.setSelected(false);
			chkNgay.setSelected(false);
			chkThang.setSelected(false);
			return 0;
		}
		if (chk4) {
			return 1;
		}

		return -1;
	}

	//
	private Date getHienTai() {
		GregorianCalendar gcalendar = new GregorianCalendar();

		int dd = gcalendar.get(java.util.Calendar.DATE);
		int mm = gcalendar.get(java.util.Calendar.MONTH);
		int yy = gcalendar.get(java.util.Calendar.YEAR);
		Date a = new Date(yy - 1900, mm, dd);
		return a;
	}

//	
	private void addTable(List<HoaDon> dsHoaDon) {
		double s = 0;

		DefaultTableModel dm = (DefaultTableModel) table.getModel();
		dm.getDataVector().removeAllElements();

//		"Mã hóa đơn", "Tên khách hàng", "Tên nhân viên", "Ngày lập", "Số lượng sách", "Tổng tiền" 
		for (HoaDon a : dsHoaDon) {
			s += a.getTongTien();
			modelTable.addRow(new Object[] { a.getMaHD(), a.getKhachHang().getTenKH(),
					a.getNhanVien().getTenNV(), a.getNgaylap(), hoaDonDAO.soLuongSach_HD(a.getMaHD()), a.getTongTien() });
		}
		txtTong.setText(new DecimalFormat("###,###,###.0").format(s));

	}

	private void getcboNam() {
		String dd = cboNgay.getSelectedItem().toString();
		String mm = cboThang.getSelectedItem().toString();
		int yy = Integer.parseInt(cboNam.getSelectedItem().toString());

		if (((yy % 4 == 0) && (yy % 100 != 0)) || (yy % 400 == 0)) {
			if (mm.equals("02")) {
				cboNgay.setModel(new DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07",
						"08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23",
						"24", "25", "26", "27", "28", "29" }));
			} else if (mm.equals("04") || mm.equals("06") || mm.equals("09") || mm.equals("11")) {
				cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05",
						"06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
						"22", "23", "24", "25", "26", "27", "28", "29", "30" }));

			} else {
				cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05",
						"06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
						"22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
			}

		} else {
			if (mm.equals("02")) {
				cboNgay.setModel(new DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06", "07",
						"08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22", "23",
						"24", "25", "26", "27", "28" }));
			} else if (mm.equals("04") || mm.equals("06") || mm.equals("09") || mm.equals("11")) {
				cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05",
						"06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
						"22", "23", "24", "25", "26", "27", "28", "29", "30" }));

			} else {
				cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05",
						"06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
						"22", "23", "24", "25", "26", "27", "28", "29", "30", "31" }));
			}

		}

		cboNgay.setSelectedItem(dd);

	}

	private void getcboThang() {
		String dd = cboNgay.getSelectedItem().toString();
		String mm = cboThang.getSelectedItem().toString();
		int yy = Integer.parseInt(cboNam.getSelectedItem().toString());
		if (mm.equalsIgnoreCase("02")) {
			if (((yy % 4 == 0) && (yy % 100 != 0)) || (yy % 400 == 0)) {
				cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05",
						"06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
						"22", "23", "24", "25", "26", "27", "28", "29" }));
			} else {
				cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05",
						"06", "07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21",
						"22", "23", "24", "25", "26", "27", "28" }));
			}

		} else if (mm.equals("04") || mm.equals("06") || mm.equals("09") || mm.equals("11")) {
			cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06",
					"07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
					"23", "24", "25", "26", "27", "28", "29", "30" }));

		} else {
			cboNgay.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "01", "02", "03", "04", "05", "06",
					"07", "08", "09", "10", "11", "12", "13", "14", "15", "16", "17", "18", "19", "20", "21", "22",
					"23", "24", "25", "26", "27", "28", "29", "30", "31" }));
		}
		cboNgay.setSelectedItem(dd);

	}

//
	private void addComboBox() {
		GregorianCalendar gcalendar = new GregorianCalendar();

		String dd = "" + gcalendar.get(Calendar.DATE);
		String mm = "" + (gcalendar.get(Calendar.MONTH) + 1);
		String yy = "" + gcalendar.get(Calendar.YEAR);

		cboNgay.setSelectedItem(dd);
		cboThang.setSelectedItem(mm);
		cboNam.setSelectedItem(yy);

	}

//	
	// End of variables declaration
}
