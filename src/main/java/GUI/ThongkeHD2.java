/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
//import java.util.Calendar;
import java.util.Collections;
import java.util.Comparator;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;

import com.toedter.calendar.JDateChooser;

import GUI.Dialog.DialogCT_HoaDon;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import dao.CT_HoaDonDAO;
import dao.HoaDonDAO;
import dao.impl.CT_HoaDonImpl;
import dao.impl.HoaDonImpl;
import entity.HoaDon;
import entity.Sach;

/**
 *
 * @author LENOVO
 */
public class ThongkeHD2 extends JFrame implements ActionListener ,MouseListener {

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private com.toedter.calendar.JDateChooser dateStart;
	private com.toedter.calendar.JDateChooser dateEnd;
	private javax.swing.JButton X;
	private javax.swing.JButton btnTheoKH;
	private javax.swing.JButton btnTheoMoc;
	private javax.swing.JButton btnTheoNV;
	private javax.swing.JButton btnTheoNam;
	private javax.swing.JButton btnTheoNgay;
	private javax.swing.JButton btnTheoThang;
	private javax.swing.JButton btnTheoGia;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JLabel jLabel7;
	private javax.swing.JLabel jLabel8;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JSeparator jSeparator2;
	private javax.swing.JTable table;
	private javax.swing.JTextField txtTong;
	private DefaultTableModel modelTable;
	private int ma1 = 0;
	private int ma2 = 0;

	private String tk = QL.taiKhoan;

	private HoaDonDAO hoaDonDAO = new HoaDonImpl();

	private List<HoaDon> dsHoaDon = hoaDonDAO.getDsHoaDon();

	private SimpleDateFormat dformat = new SimpleDateFormat("dd-MM-yyyy");

	/**
	 * Creates new form ThongkeHD
	 */
	public ThongkeHD2() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		btnTheoGia = new javax.swing.JButton();
		jScrollPane1 = new javax.swing.JScrollPane();
		table = new javax.swing.JTable();
		X = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		btnTheoKH = new javax.swing.JButton();
		btnTheoNV = new javax.swing.JButton();
		btnTheoNam = new javax.swing.JButton();
		btnTheoNgay = new javax.swing.JButton();
		btnTheoThang = new javax.swing.JButton();
		jSeparator2 = new javax.swing.JSeparator();
		dateStart = new com.toedter.calendar.JDateChooser();
		dateEnd = new com.toedter.calendar.JDateChooser();
		jLabel7 = new javax.swing.JLabel();
		txtTong = new javax.swing.JTextField();
		jLabel8 = new javax.swing.JLabel();
		btnTheoMoc = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setUndecorated(true);

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		jLabel1.setText("Thống kê hóa đơn");

		btnTheoGia.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoGia.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoGia.setText("Thống kê theo giá hóa đơn");
		btnTheoGia.setToolTipText("Thống kê theo giá hóa đơn.");

		table.setModel(new javax.swing.table.DefaultTableModel(new Object[][] {

		}, new String[] { "Mã hóa đơn", "Mã khách hàng", "Tên khách hàng", "Tên nhân viên", "Ngày lập", "Tổng tiền" }));
		jScrollPane1.setViewportView(table);
		if (table.getColumnModel().getColumnCount() > 0) {
			table.getColumnModel().getColumn(3).setResizable(false);
		}

		X.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
		X.setForeground(new java.awt.Color(255, 0, 0));
		X.setText("X");
		X.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				XActionPerformed(evt);
			}
		});

		jLabel2.setText("Chọn thời gian");

		jLabel3.setText("Từ:");

		jLabel4.setText("Đến:");

		btnTheoKH.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoKH.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoKH.setText("Thống kê theo khách hàng");
		btnTheoKH.setToolTipText("Thống kê theo mã hoặc số điện thoại khách hàng.");

		btnTheoNV.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoNV.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoNV.setText("Thống kê theo nhân viên");
		btnTheoNV.setToolTipText("Thống kê theo mã hoặc số điện thoại nhân viên.");

		btnTheoNam.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoNam.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoNam.setText("Thống kê theo năm");
		btnTheoNam.setToolTipText("Thống kê theo năm hiện tại");

		btnTheoNgay.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoNgay.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoNgay.setText("Thống kê theo ngày");
		btnTheoNgay.setToolTipText("Thống kê theo ngày hiện tại");

		btnTheoThang.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoThang.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoThang.setText("Thống kê theo tháng");
		btnTheoThang.setToolTipText("Thống kê theo tháng hiện tại");

		jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel7.setText("Tổng doanh thu: ");

		jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
		jLabel8.setText("VND");

		btnTheoMoc.setBackground(new java.awt.Color(255, 51, 0));
		btnTheoMoc.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		btnTheoMoc.setText("Thống kê theo mốc thời gian");

	       javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
	        jPanel1.setLayout(jPanel1Layout);
	        jPanel1Layout.setHorizontalGroup(
	            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
	                .addGap(0, 0, Short.MAX_VALUE)
	                .addComponent(jLabel1)
	                .addGap(276, 276, 276)
	                .addComponent(X)
	                .addGap(158, 158, 158))
	            .addGroup(jPanel1Layout.createSequentialGroup()
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
	                    .addGroup(jPanel1Layout.createSequentialGroup()
	                        .addComponent(jLabel7)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
	                        .addComponent(txtTong, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
	                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                        .addComponent(jLabel8))
	                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                        .addGroup(jPanel1Layout.createSequentialGroup()
	                            .addGap(66, 66, 66)
	                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
	                                .addComponent(btnTheoKH, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                                .addComponent(btnTheoNgay, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	                            .addGap(60, 60, 60)
	                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
	                                .addComponent(btnTheoThang, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                                .addComponent(btnTheoNV))
	                            .addGap(71, 71, 71)
	                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
	                                .addComponent(btnTheoGia, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                                .addComponent(btnTheoNam, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	                            .addGap(213, 213, 213)
	                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
	                            .addGap(18, 18, 18)
	                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                                .addComponent(btnTheoMoc, javax.swing.GroupLayout.PREFERRED_SIZE, 269, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                .addGroup(jPanel1Layout.createSequentialGroup()
	                                    .addGap(9, 9, 9)
	                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
	                                        .addComponent(jLabel2)
	                                        .addGroup(jPanel1Layout.createSequentialGroup()
	                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                                            .addComponent(dateEnd, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
	                                        .addGroup(jPanel1Layout.createSequentialGroup()
	                                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
	                                            .addComponent(dateStart, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))))))
	                        .addGroup(jPanel1Layout.createSequentialGroup()
	                            .addGap(50, 50, 50)
	                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1268, javax.swing.GroupLayout.PREFERRED_SIZE))))
	                .addContainerGap(122, Short.MAX_VALUE))
	        );
	        jPanel1Layout.setVerticalGroup(
	            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(jPanel1Layout.createSequentialGroup()
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
	                    .addComponent(X))
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                    .addGroup(jPanel1Layout.createSequentialGroup()
	                        .addGap(37, 37, 37)
	                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                            .addGroup(jPanel1Layout.createSequentialGroup()
	                                .addGap(102, 102, 102)
	                                .addComponent(btnTheoMoc, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
	                            .addGroup(jPanel1Layout.createSequentialGroup()
	                                .addComponent(btnTheoNV, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                .addGap(18, 18, 18)
	                                .addComponent(btnTheoThang, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
	                            .addGroup(jPanel1Layout.createSequentialGroup()
	                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                                    .addComponent(btnTheoKH, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                    .addComponent(btnTheoGia, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
	                                .addGap(18, 18, 18)
	                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
	                                    .addComponent(btnTheoNgay, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                    .addComponent(btnTheoNam, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)))))
	                    .addGroup(jPanel1Layout.createSequentialGroup()
	                        .addGap(18, 18, 18)
	                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	                            .addGroup(jPanel1Layout.createSequentialGroup()
	                                .addComponent(jLabel2)
	                                .addGap(11, 11, 11)
	                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
	                                    .addComponent(dateStart, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                    .addComponent(jLabel3))
	                                .addGap(31, 31, 31)
	                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
	                                    .addComponent(dateEnd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                                    .addComponent(jLabel4)))
	                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)))
	                    .addGroup(jPanel1Layout.createSequentialGroup()
	                        .addGap(213, 213, 213)
	                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 399, Short.MAX_VALUE)))
	                .addGap(41, 41, 41)
	                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE, false)
	                    .addComponent(jLabel7)
	                    .addComponent(txtTong, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
	                    .addComponent(jLabel8))
	                .addGap(114, 114, 114))
	        );

	        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
	        getContentPane().setLayout(layout);
	        layout.setHorizontalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
	                .addGap(0, 0, Short.MAX_VALUE))
	        );
	        layout.setVerticalGroup(
	            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
	            .addGroup(layout.createSequentialGroup()
	                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
	                .addContainerGap())
	        );

        
		pack();
		setLocationRelativeTo(null);
//       
		btnTheoKH.addActionListener(this);
		btnTheoMoc.addActionListener(this);
		btnTheoNam.addActionListener(this);
		btnTheoNgay.addActionListener(this);
		btnTheoNV.addActionListener(this);
		btnTheoThang.addActionListener(this);
		btnTheoGia.addActionListener(this);
		
		table.addMouseListener(this);
//        
		table.setDefaultEditor(Object.class, null);
		modelTable = (DefaultTableModel) table.getModel();
		addTable(dsHoaDon);
//        
		dateStart.setDateFormatString("dd-MM-yyyy");
		dateStart.setDate(getHienTai());
		dateStart.setMaxSelectableDate(getHienTai());
		dateEnd.setDateFormatString("dd-MM-yyyy");
		dateEnd.setDate(getHienTai());
		dateEnd.setMaxSelectableDate(getHienTai());
//		
		txtTong.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
		txtTong.setForeground(new java.awt.Color(255, 102, 0));
		txtTong.setEditable(false);

	}// </editor-fold>//GEN-END:initComponents

	private void XActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_XActionPerformed
		// TODO add your handling code here:
		new QL(tk).setVisible(true);
		this.setVisible(false);
	}// GEN-LAST:event_XActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(ThongkeHD2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new ThongkeHD2().setVisible(true);
			}
		});
	}

	@Override
	public void actionPerformed(ActionEvent arg0) {
		Object o = arg0.getSource();
		if (o.equals(btnTheoKH)) {
			System.err.println("btnTheoKH()");
			getTKTheoKhachHang();
		} else if (o.equals(btnTheoNV)) {
			System.err.println("btnTheoNV()");
			getTKTheoNhanVien();
		} else if (o.equals(btnTheoGia)) {
			System.err.println("btnTheoGia()");
			getTKTheoGiaHD();
		} else if (o.equals(btnTheoNgay)) {
			System.err.println("btnTheoNgay()");
			getTKTheoNgayHT();
		} else if (o.equals(btnTheoThang)) {
			System.err.println("btnTheoThang()");
			getTKTheoThangHT();
		} else if (o.equals(btnTheoNam)) {
			System.err.println("btnTheoNam()");
			getTKTheoNamHT();
		} else if (o.equals(btnTheoMoc)) {
			System.err.println("btnTheoMoc()");
			getTKTheoMocTG();
		}
	}

	private void getTKTheoMocTG() {
		if (ma2 != 8) {
			Date dateBD = dateStart.getCalendar().getTime();
			Date dateKT = dateEnd.getCalendar().getTime();
			if (dateKT.compareTo(dateBD) < 0) {
				JOptionPane.showMessageDialog(this, "Ngày kết thúc phải lớn hơn ngày bắt đầu");
			}
			
			List<HoaDon> list = new ArrayList<>();
			for (HoaDon hd : dsHoaDon) {
				if (hd.getNgaylap().compareTo(dateBD) >= 0 && hd.getNgaylap().compareTo(dateKT) <= 0 ) {
					list.add(hd);
				}
			}
			if (list.size() == 0) {
				JOptionPane.showMessageDialog(this, "Khoản thời gian trên chưa lập hóa đơn. \nHẹn gặp lại sau.");
				addTable(dsHoaDon);
				ma2 = 0;
			} else {
				addTable(list);
				ma2 = 8;
			}
		} else {
			addTable(dsHoaDon);
			ma2 = 0;
		}
	}

//	

//
	private void getTKTheoNamHT() {
		if (ma2 != 7) {
			List<HoaDon> list = new ArrayList<>();
			for (HoaDon hd : dsHoaDon) {
				if (hd.getNgaylap().getYear() == getHienTai().getYear()) {
					list.add(hd);
				}
			}
			if (list.size() == 0) {
				JOptionPane.showMessageDialog(this, "Năm hiện tại chưa lập hóa đơn. \nHẹn gặp lại sau.");
				addTable(dsHoaDon);
				ma2 = 0;
			} else {
				addTable(list);
				ma2 = 7;
			}
		} else {
			addTable(dsHoaDon);
			ma2 = 0;
		}
	}

//
	private void getTKTheoThangHT() {
		if (ma2 != 6) {
			List<HoaDon> list = new ArrayList<>();
			for (HoaDon hd : dsHoaDon) {
				if (hd.getNgaylap().getYear() == getHienTai().getYear()) {
					if (hd.getNgaylap().getMonth() == getHienTai().getMonth()) {
						list.add(hd);
					}
				}
			}
			if (list.size() == 0) {
				JOptionPane.showMessageDialog(this, "Tháng hiện tại chưa lập hóa đơn. \nHẹn gặp lại sau.");
				addTable(dsHoaDon);
				ma2 = 0;
			} else {
				addTable(list);
				ma2 = 6;
			}
		} else {
			addTable(dsHoaDon);
			ma2 = 0;
		}
	}

//
	private void getTKTheoNgayHT() {
		if (ma2 != 5) {
			List<HoaDon> list = new ArrayList<>();
			for (HoaDon hd : dsHoaDon) {
				if (hd.getNgaylap().compareTo(getHienTai()) == 0) {
					list.add(hd);
				}
			}
			if (list.size() == 0) {
				JOptionPane.showMessageDialog(this, "Ngày hôm nay chưa lập hóa đơn. \nHẹn gặp lại sau.");
				addTable(dsHoaDon);
				ma2 = 0;
			} else {
				addTable(list);
				ma2 = 5;
			}
		} else {
			addTable(dsHoaDon);
			ma2 = 0;
		}

	}

	private void getTKTheoGiaHD() {
		if (ma2 != 3) {
			Collections.sort(dsHoaDon, new Comparator<HoaDon>() {

				@Override
				public int compare(HoaDon s1, HoaDon s2) {
					return (int) (s2.getTongTien() - s1.getTongTien());
				}
			});
			addTable(dsHoaDon);
			ma2 = 3;
		} else if (ma2 != 4) {
			Collections.sort(dsHoaDon, new Comparator<HoaDon>() {

				@Override
				public int compare(HoaDon s1, HoaDon s2) {
					return (int) (s1.getTongTien() - s2.getTongTien());
				}
			});
			addTable(dsHoaDon);
			ma2 = 4;
		}
	}

//	
	private void getTKTheoNhanVien() {
		String data = JOptionPane.showInputDialog("Bạn hãy nhập mã nhân viên hoặc số sdt:");
		if (data == null) {
			return;
		}
		String mess = "";
		List<HoaDon> list = new ArrayList<>();

		if (data.length() == 7 || data.length() == 10) {
			if (data.length() == 7) {
				if (data.matches("^NV[0-9]{5}$")) {
					for (HoaDon a : dsHoaDon) {
						if (a.getNhanVien().getMaNV().equals(data)) {
							list.add(a);
						}
					}
					if (list.size() == 0) {
						mess = "Mã '" + data + "' chưa có hóa đơn trong cửa hàng.";
					}
				} else {
					mess = "Mã nhân viên phải bắt đầu bằng 2 ký tự 'NV' và theo sau 5 ký tự số.";
				}
			} else {
				if (data.matches("^0[0-9]{9}$")) {
					for (HoaDon a : dsHoaDon) {
						if (a.getNhanVien().getSoDT().equals(data)) {
							list.add(a);
						}
					}
					if (list.size() == 0) {
						mess = "Số điện thoại '" + data + "' chưa có hóa đơn trong cửa hàng.";
					}
				} else {
					mess = "Số điện thoại thì phải có 10 chữ số và bắt đầu bằng chữ số 0.";
				}
			}
		} else {
			if (ma1 == 0) {
				mess = "Không tìm thấy nhân viên có thông tin là: '" + data
						+ "'. \nHãy nhập lại nếu là mã thì phải có 2 ký tự 'NV' đứng đầu theo sau 5 ký tự số. \nTrong trường hợp là số điện thoại thì phải có 10 số và bắt đầu bằng chữ số 0.";
				ma1 = 1;
			} else if (ma1 == 1) {
				mess = "Không tìm thấy nhân viên có thông tin là: '" + data
						+ "'. \nHãy chắc chắn rằng nhân viên đã lập hóa đơn trong cửa hàng.";
				ma1 = 0;
			}
		}
		if (!mess.equals("")) {
			JOptionPane.showMessageDialog(this, mess);
			addTable(dsHoaDon);
			return;
		}
		addTable(list);
	}

//
	private void getTKTheoKhachHang() {
		String data = JOptionPane.showInputDialog("Bạn hãy nhập mã khách hàng hoặc số sdt:");
		if (data == null) {
			return;
		}
		String mess = "";
		List<HoaDon> list = new ArrayList<>();

		if (data.length() == 7 || data.length() == 10) {
			if (data.length() == 7) {
				if (data.matches("^KH[0-9]{5}$")) {
					for (HoaDon a : dsHoaDon) {
						if (a.getKhachHang().getMaKH().equals(data)) {
							list.add(a);
						}
					}
					if (list.size() == 0) {
						mess = "Mã '" + data + "' chưa có hóa đơn trong cửa hàng.";
					}
				} else {
					mess = "Mã khách hàng phải bắt đầu bằng 2 ký tự 'KH' và theo sau 5 ký tự số.";
				}
			} else {
				if (data.matches("^0[0-9]{9}$")) {
					for (HoaDon a : dsHoaDon) {
						if (a.getKhachHang().getSoDT().equals(data)) {
							list.add(a);
						}
					}
					if (list.size() == 0) {
						mess = "Số điện thoại '" + data + "' chưa có hóa đơn trong cửa hàng.";
					}
				} else {
					mess = "Số điện thoại thì phải có 10 chữ số và bắt đầu bằng chữ số 0.";
				}
			}
		} else {
			if (ma1 == 0) {
				mess = "Không tìm thấy khách hàng có thông tin là: '" + data
						+ "'. \nHãy nhập lại nếu là mã thì phải có 2 ký tự 'KH' đứng đầu theo sau 5 ký tự số. \nTrong trường hợp là số điện thoại thì phải có 10 số và bắt đầu bằng chữ số 0.";
				ma1 = 1;
			} else if (ma1 == 1) {
				mess = "Không tìm thấy khách hàng có thông tin là: '" + data
						+ "'. \nHãy chắc chắn rằng khách hàng này đã mua hàng.";
				ma1 = 0;
			}
		}
		if (!mess.equals("")) {
			JOptionPane.showMessageDialog(this, mess);
			addTable(dsHoaDon);
			return;
		}
		addTable(list);
	}

//	
	private Date getHienTai() {
		GregorianCalendar gcalendar = new GregorianCalendar();

		int dd = gcalendar.get(java.util.Calendar.DATE);
		int mm = gcalendar.get(java.util.Calendar.MONTH);
		int yy = gcalendar.get(java.util.Calendar.YEAR);
		Date a = new Date(yy - 1900, mm, dd);
		return a;
	}

//	
	private void addTable(List<HoaDon> dsHoaDon) {
//      "Mã hóa đơn", "Mã khách hàng", "Tên khách hàng", "Tên nhân viên", "Ngày lập", "Tổng tiền"
		double s = 0;

		DefaultTableModel dm = (DefaultTableModel) table.getModel();
		dm.getDataVector().removeAllElements();

		for (HoaDon a : dsHoaDon) {
			s += a.getTongTien();
			modelTable.addRow(new Object[] { a.getMaHD(), a.getKhachHang().getMaKH(), a.getKhachHang().getTenKH(),
					a.getNhanVien().getTenNV(), a.getNgaylap(), a.getTongTien() });
		}
		txtTong.setText(new DecimalFormat("###,###,###.0").format(s));

	}

@Override
public void mouseClicked(MouseEvent arg0) {
	// TODO Auto-generated method stub
	
}

@Override
public void mouseEntered(MouseEvent arg0) {
	// TODO Auto-generated method stub
	
}

@Override
public void mouseExited(MouseEvent arg0) {
	// TODO Auto-generated method stub
	
}

@Override
public void mousePressed(MouseEvent arg0) {
	if (arg0.getClickCount() == 2) {
		int row = table.getSelectedRow();
		new DialogCT_HoaDon(modelTable.getValueAt(row, 0).toString()).setVisible(true);
	}
}

@Override
public void mouseReleased(MouseEvent arg0) {
	// TODO Auto-generated method stub
	
}

	// End of variables declaration//GEN-END:variables
}
