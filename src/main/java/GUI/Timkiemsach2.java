/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;

import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import dao.SachDAO;
import dao.impl.SachImpl;
import entity.NhaXuatBan;
import entity.Sach;
import entity.TacGia;

/**
 *
 * @author LENOVO
 */
public class Timkiemsach2 extends JFrame implements ActionListener{

    /**
     * Creates new form Timkiemsach
     */
    public Timkiemsach2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtMaSach = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        cbbTheLoai = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        cbbTacGia = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        cbbNhaXB = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableSach = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnTimKiem = new javax.swing.JButton();
        X1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel5.setText("Tra cứu sách");

        jLabel7.setBackground(new java.awt.Color(255, 255, 255));
        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(255, 51, 0));
        jLabel7.setText("Mã sách");

        jLabel3.setBackground(new java.awt.Color(255, 255, 255));
        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 51, 0));
        jLabel3.setText("Tên sách");

        jLabel4.setBackground(new java.awt.Color(255, 255, 255));
        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 51, 0));
        jLabel4.setText("Thể loại");

        cbbTheLoai.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "Văn học trong nước", "Văn học nước ngoài",
				"Sách Kinh tế", "Sách giáo khoa", "Sách tâm lý", "Chăm sóc sức khỏe", "Tài liệu nước ngoài" }));

        jLabel2.setBackground(new java.awt.Color(255, 255, 255));
        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 51, 0));
        jLabel2.setText("Tác giả");

        cbbTacGia.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        jLabel8.setBackground(new java.awt.Color(255, 255, 255));
        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 51, 0));
        jLabel8.setText("Nhà xuất bản");

        cbbNhaXB.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));

        tableSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã sách", "Tên sách", "Thể loại", "Tác giả", "NXB", "Giá thành", "Số lượng"
            }
        ));
        jScrollPane1.setViewportView(tableSach);

        btnRefresh.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(255, 51, 0));
        btnRefresh.setText("Làm Mới");

        btnTimKiem.setBackground(new java.awt.Color(255, 255, 255));
        btnTimKiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnTimKiem.setForeground(new java.awt.Color(255, 102, 0));
        btnTimKiem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/image/timkiem.png"))); // NOI18N
        btnTimKiem.setText("Tìm kiếm");
        btnTimKiem.setInheritsPopupMenu(true);
        btnTimKiem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTimKiemActionPerformed(evt);
            }
        });

        X1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        X1.setForeground(new java.awt.Color(255, 0, 0));
        X1.setText("X");
        X1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                X1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(287, 287, 287)
                .addComponent(X1)
                .addGap(86, 86, 86))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtTenSach)
                                .addComponent(cbbTheLoai, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbbTacGia, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(cbbNhaXB, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(txtMaSach))
                            .addComponent(jLabel2)
                            .addComponent(jLabel8)
                            .addComponent(jLabel4)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addGap(60, 60, 60)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1004, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(38, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTimKiem, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(103, 103, 103))))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addComponent(jLabel5)
                .addGap(37, 37, 37)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtMaSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbTheLoai, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbbNhaXB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(X1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 478, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnTimKiem)
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
//        
        txtMaSach.addActionListener(this);
        txtTenSach.addActionListener(this);
        btnRefresh.addActionListener(this);
        btnTimKiem.addActionListener(this);
        cbbNhaXB.addActionListener(this);
        cbbTacGia.addActionListener(this);
        cbbTheLoai.addActionListener(this);
//        
		modelSach = (DefaultTableModel) tableSach.getModel();
		addTable_Sql(sachDAO.getDsSach());
//    
		addCbb_Sql();
        
        
    }// </editor-fold>//GEN-END:initComponents

    private void btnTimKiemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTimKiemActionPerformed

    }//GEN-LAST:event_btnTimKiemActionPerformed

    private void X1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_X1ActionPerformed
        // TODO add your handling code here:
        new DangNhap().setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_X1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Timkiemsach2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Timkiemsach2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Timkiemsach2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Timkiemsach2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Timkiemsach2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable tableSach;
    private javax.swing.JButton X1;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnTimKiem;
    private javax.swing.JComboBox<String> cbbNhaXB;
    private javax.swing.JComboBox<String> cbbTacGia;
    private javax.swing.JComboBox<String> cbbTheLoai;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtMaSach;
    private javax.swing.JTextField txtTenSach;
	private DefaultTableModel modelSach;
	SachDAO sachDAO = new SachImpl();
	
    // End of variables declaration//GEN-END:variables
	@Override
	public void actionPerformed(ActionEvent e) {
		Object o = e.getSource();
		if (o.equals(btnRefresh)) {
			System.err.println("btnRefresh");
			xoaRongJtext_Sach();
		} else if (o.equals(txtMaSach) || o.equals(txtTenSach) || o.equals(btnTimKiem)) {
			System.err.println("btnTimSach");
			getTimKiemSach();
		}
	}
	
	//
	private void getTimKiemSach() {
		List<Sach> dsSach = new ArrayList<>();
		int n = 1;

		String ma = txtMaSach.getText().trim();
		String ten = txtTenSach.getText().trim();
		String theLoai = cbbTheLoai.getSelectedItem().toString();
		String nhaXB = cbbNhaXB.getSelectedItem().toString();
		String tacGia = cbbTacGia.getSelectedItem().toString();

		if (ma.equals("") && ten.equals("") && theLoai.equals("") && nhaXB.equals("") && tacGia.equals("")) {
			n = -1;
			JOptionPane.showMessageDialog(this, "Hãy nhập dữ liệu cần tìm kiếm");

			addTable_Sql(sachDAO.getDsSach());
			txtTenSach.requestFocus();
		}
//		
		if (ma.length() > 0 && n == 1) {
			Sach a = sachDAO.getSach_id(ma);
			if (a == null) {
				JOptionPane.showMessageDialog(this,
						"Mã " + ma + " không có trong danh sách.\nBạn hãy thử tìm kiếm theo nhưng thông tin khác.");
				txtMaSach.selectAll();
				txtMaSach.requestFocus();
			} else {
				DefaultTableModel dm = (DefaultTableModel) tableSach.getModel();
				dm.getDataVector().removeAllElements();

				modelSach.addRow(new Object[] { a.getMaSach(), a.getTenSach(), a.getLoai(), tacGia, nhaXB,
						a.getGiaThanh(), a.getSoLuong() });
			}

			n = -1;
		}
//		===================================================
		if (ten.length() > 0 && n == 1) {
			dsSach = sachDAO.getDsSach_Ten(dsSach, ten);
			if (dsSach.size() != 0) {
				addTable_Sql(dsSach);
			} else {
				JOptionPane.showMessageDialog(this,
						"Không tìm thấy.\nHãy kiểm tra có thể bạn đã nhập sai dữ liệu.\nTrước mỗi từ hãy viết hoa và có dấu");
				txtTenSach.selectAll();
				txtTenSach.requestFocus();
				n = -1;
				addTable_Sql(sachDAO.getDsSach());
			}
		}
//		===================================================
		if (theLoai.length() > 0 && n == 1) {
			dsSach = sachDAO.getDsSach_TheLoai(dsSach, theLoai);
			if (dsSach.size() != 0) {
				addTable_Sql(dsSach);
			} else {
				getERR_TimKiemSach(theLoai);
				n = -1;
			}
		}

//		===================================================
		if (tacGia.length() > 0 && n == 1) {
			String x = "TG" + tacGia.substring(0, 5);
			dsSach = sachDAO.getDsSach_TacGia(dsSach, x);
			if (dsSach.size() != 0) {
				addTable_Sql(dsSach);
			} else {
				getERR_TimKiemSach(tacGia);
				n = -1;
			}
		}

//		===================================================
		if (nhaXB.length() > 0 && n == 1) {
			String x = "NXB" + nhaXB.substring(0, 5);
			dsSach = sachDAO.getDsSach_NhaXB(dsSach, x);
			if (dsSach.size() != 0) {
				addTable_Sql(dsSach);
			} else {
				getERR_TimKiemSach(nhaXB);
				n = -1;
			}
		}

	}

//
	public void getERR_TimKiemSach(String str) { // str: thonog tin tim
		JOptionPane.showMessageDialog(this,
				"Không tìm thấy quyển sách nào phù hợp với " + str + ".\nHãy chọn một thể loại khác.");

		addTable_Sql(sachDAO.getDsSach());
	}

//
	private void xoaRongJtext_Sach() {
		cbbTacGia.setSelectedIndex(0);
		cbbTheLoai.setSelectedIndex(0);
		cbbNhaXB.setSelectedIndex(0);

		txtTenSach.setText("");
		txtTenSach.requestFocus();
		txtMaSach.setText("");


		addTable_Sql(sachDAO.getDsSach());
	}

	//
	private void addCbb_Sql() {
		List<NhaXuatBan> dsNhaXuatBan = sachDAO.getDsNhaXB();

		for (NhaXuatBan a : dsNhaXuatBan) {
			String nhaXB = a.getMaNXB().substring(3, 8) + "--" + a.getTenNXB();
			cbbNhaXB.addItem(nhaXB);
		}
		List<TacGia> dsTacGia = sachDAO.getDsTacGia();

		for (TacGia a1 : dsTacGia) {
			String tacGia = a1.getMaTG().substring(2, 7) + "--" + a1.getTenTG();
			cbbTacGia.addItem(tacGia);
		}
	}

	//
	private void addTable_Sql(List<Sach> dsSach) {
		DefaultTableModel dm = (DefaultTableModel) tableSach.getModel();
		dm.getDataVector().removeAllElements();

		for (Sach a : dsSach) {
			String tacGia = a.getTacGia().getMaTG().substring(2, 7) + "--" + a.getTacGia().getTenTG();
			String nhaXB = a.getNhaXB().getMaNXB().substring(3, 8) + "--" + a.getNhaXB().getTenNXB();
			double gia = a.getGiaThanh() ;

			modelSach.addRow(new Object[] {
//					"Mã sách", "Tên sách", "Thể loại", "Tác giả", "NXB", "Giá thành", "Số lượng"
					a.getMaSach(), a.getTenSach(), a.getLoai(), tacGia, nhaXB, gia, a.getSoLuong() });
		}
	}
	
	
	//
}
